10 FEBUARY 2023

1162 || As Far from Land as Possible || Leetcode Daily Challenge

LINK OF TADAY'S PROBLEM OF THE DAY 

https://leetcode.com/problems/as-far-from-land-as-possible/

REMOVE ALL THE CODE (1 TO 6)

COPY CODE FORM 18 TH LINE

WAIT FOR SOME TIME CODES TAKE TIME TO GET EXECUTE... SO BE PATIENCE




class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
        int n = grid.size();
        queue<pair<pair<int,int>,int>>q;
        vector<vector<int>>arr(n,vector<int>(n,-1));
        for(int i = 0;i < grid.size();i++){
            for(int j = 0;j < grid[i].size();j++){
                if(grid[i][j] == 1){
                    q.push({{i,j},0});
                    arr[i][j] = 1;
                }
            }
        }
        if(q.size() == 0 || q.size() == n* n){
            return -1;
        }
        int ans = 0;
        while(!q.empty()){
            int i = q.front().first.first;
            int j = q.front().first.second;
            int dist = q.front().second;
            if(arr[i][j] == -1){
                arr[i][j] = 1;
                ans = max(ans,dist);
            }
            q.pop();
            if(i > 0){
                if(grid[i-1][j] == 0 && arr[i-1][j] == -1){
                    q.push({{i-1,j},dist+1});
                }
            }
            if(i < n-1){
                if(grid[i+1][j] == 0 && arr[i+1][j] == -1){
                    q.push({{i+1,j},dist+1});
                }
            }
            if(j > 0){
                if(grid[i][j-1] == 0 && arr[i][j-1] == -1){
                    q.push({{i,j-1},dist+1});
                }
            }
            if(j < n-1){
                if(grid[i][j+1] == 0 && arr[i][j+1] == -1){
                    q.push({{i,j+1},dist+1});
                }
            }
        }
        return ans;

    }
};





BY KUSHAL347 
